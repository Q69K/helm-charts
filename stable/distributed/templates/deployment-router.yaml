{{- define "distributed.router.deployment.container.main" -}}
name: router
image: "{{ .Values.stackstate.components.router.image.repository }}:{{ .Values.stackstate.components.router.image.tag }}"
imagePullPolicy: {{ .Values.stackstate.components.router.image.pullPolicy | quote }}
env:
{{- include "distributed.common.envvars" . }}
{{- include "distributed.router.envvars" . }}
ports:
- containerPort: 8080
  name: router
- containerPort: 8001
  name: admin
livenessProbe:
  httpGet:
    path: /ready
    port: admin
  initialDelaySeconds: 5
readinessProbe:
  httpGet:
    path: /ready
    port: admin
  initialDelaySeconds: 5
{{- with .Values.stackstate.components.router.resources }}
resources:
  {{- toYaml . | nindent 2 }}
{{- end }}
securityContext:
  runAsGroup: 65534
  runAsNonRoot: true
  runAsUser: 65534
volumeMounts:
- mountPath: /etc/envoy
  name: config
{{- end -}}

{{- define "distributed.router.deployment" -}}
{{- $commonContainer := fromYaml (include "common.container" .) -}}
{{- $overrideContainer := fromYaml (include "distributed.router.deployment.container.main" .) -}}
{{- $stsDistributedRouterMainContainer := (merge $overrideContainer $commonContainer) -}}
metadata:
  name: {{ template "common.fullname" . }}-router
  labels:
    app.kubernetes.io/component: router
spec:
  replicas: {{ .Values.stackstate.components.router.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: router
  template:
    metadata:
      annotations:
        {{- include "distributed.router.configmap.checksum" . | nindent 8 }}
      labels:
        app.kubernetes.io/component: router
    spec:
    {{- if .Values.stackstate.components.all.image.pullSecret }}
      imagePullSecrets:
      - name: '{{ .Values.stackstate.components.all.image.pullSecret }}'
    {{- end }}
      containers:
      - {{ toYaml $stsDistributedRouterMainContainer | nindent 8 }}
      volumes:
      - name: config
        configMap:
          name: {{ template "common.fullname" . }}-router
          items:
          - key: envoy-config
            path: envoy.yaml
    {{- if or .Values.stackstate.components.all.nodeSelector .Values.stackstate.components.router.nodeSelector }}
      nodeSelector:
      {{- with .Values.stackstate.components.all.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.router.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.affinity .Values.stackstate.components.router.affinity }}
      affinity:
      {{- with .Values.stackstate.components.all.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.router.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.tolerations .Values.stackstate.components.router.tolerations }}
      tolerations:
      {{- with .Values.stackstate.components.all.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.router.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
{{- end -}}

{{- if not .Values.ingress.enabled -}}
{{- $commonDeployment := fromYaml (include "common.deployment" .) -}}
{{- $routerDeployment := fromYaml (include "distributed.router.deployment" .) -}}
{{- toYaml (merge $routerDeployment $commonDeployment) -}}
{{- end -}}
