{{- if .Values.persistence.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "stackstate-standalone.fullname" . }}
  annotations:
    {{- include "gitlab.annotations" . | nindent 4 }}
  {{- with .Values.deployment.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
{{ include "stackstate-standalone.labels" . | indent 4 }}
spec:
  serviceName: {{ include "stackstate-standalone.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "stackstate-standalone.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        {{- include "gitlab.annotations" . | nindent 8 }}
        {{- include "stackstate-standalone.checksum-configs" . | nindent 8 }}
      {{- with .Values.pod.annotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "stackstate-standalone.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: {{ .Chart.Name }}-volume-mount-fix
          image: busybox
          command: ["sh", "-c", "chown -R 1000:1000 /sts/stackstate/var"]
          volumeMounts:
          - name: sts-stackstate
            mountPath: "/sts/stackstate/var"
      containers:
        - args: ["start"]
          name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{ include "stackstate-standalone.demoData.lifecycle" . | indent 10 }}
          env:
          {{ include "stackstate-standalone.requiredEnvVars" . | indent 10 }}
          ports:
            - name: ui
              containerPort: 7070
              protocol: TCP
            - name: receiver
              containerPort: 7077
              protocol: TCP
            - name: admin
              containerPort: 7071
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: admin
              scheme: HTTP
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /health
              port: admin
              scheme: HTTP
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: sts-stackstate
              mountPath: "/sts/stackstate/var"
      volumes:
        - name: sts-stackstate
          persistentVolumeClaim:
            claimName: {{ include "stackstate-standalone.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
