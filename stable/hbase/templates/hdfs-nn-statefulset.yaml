{{- define "hbase.hdfs.namenode.container.init" -}}
name: namenode-init
command:
- sh
- -c
- |
  chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }} /hadoop-data
image: "docker.io/dokkupaas/wait:latest"
imagePullPolicy: Always
securityContext:
  allowPrivilegeEscalation: true
  privileged: true
volumeMounts:
- name: {{ template "common.fullname" . }}-hdfs-nn
  mountPath: /hadoop-data
{{- end -}}

{{- define "hbase.hdfs.namenode.container.main" -}}
name: namenode
image: "{{ .Values.hdfs.image.repository }}:{{ .Values.hdfs.image.tag }}"
imagePullPolicy: {{ .Values.hdfs.image.pullPolicy }}
args:
- /entrypoint.sh
- /run.sh
- namenode
env:
{{- include "all.commonEnv" . }}
{{- include "hdfs.namenode.commonEnv" . }}
{{- include "hbase.hdfs.commonEnv" . }}
ports:
- containerPort: 9000
  name: nn
- containerPort: 50070
  name: nninfo
{{- if .Values.all.metrics.enabled }}
- containerPort: 9404
  name: metrics
{{- end }}
livenessProbe:
  httpGet:
    path: /
    port: nninfo
readinessProbe:
  httpGet:
    path: /
    port: nninfo
{{- with .Values.hdfs.namenode.resources }}
resources:
  {{- toYaml . | nindent 2 }}
{{- end }}
securityContext:
  runAsNonRoot: true
  runAsGroup: {{ .Values.securityContext.runAsGroup }}
  runAsUser: {{ .Values.securityContext.runAsUser }}
volumeMounts:
- name: {{ template "common.fullname" . }}-hdfs-nn
  mountPath: /hadoop-data
{{- end -}}

{{- define "hbase.hdfs.namenode.statefulset" -}}
{{- $commonContainer := fromYaml (include "common.container" .) -}}
{{- $overrideContainer := fromYaml (include "hbase.hdfs.namenode.container.main" .) -}}
{{- $stackstateHbaseHdfsNamenodeContainer := (merge $overrideContainer $commonContainer) }}
{{- $overrideContainer := fromYaml (include "hbase.hdfs.namenode.container.init" .) -}}
{{- $stackstateHbaseHdfsNamenodeInitContainer := (merge $overrideContainer $commonContainer) }}
metadata:
  labels:
    app.kubernetes.io/component: hdfs-nn
  name: {{ template "common.fullname" . }}-hdfs-nn
spec:
  serviceName: {{ template "common.fullname" . }}-hdfs-nn
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: hdfs-nn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: hdfs-nn
    spec:
    {{- if .Values.all.image.pullSecret }}
      imagePullSecrets:
      - name: '{{ .Values.all.image.pullSecret }}'
    {{- end }}
      initContainers:
      - {{ toYaml $stackstateHbaseHdfsNamenodeInitContainer | nindent 8 }}
      containers:
      - {{ toYaml $stackstateHbaseHdfsNamenodeContainer | nindent 8 }}
    {{- if or .Values.all.nodeSelector .Values.hdfs.namenode.nodeSelector }}
      nodeSelector:
      {{- with .Values.all.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hdfs.namenode.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.all.affinity .Values.hdfs.namenode.affinity }}
      affinity:
      {{- with .Values.all.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hdfs.namenode.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.all.tolerations .Values.hdfs.namenode.tolerations }}
      tolerations:
      {{- with .Values.all.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hdfs.namenode.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
      volumes:
    {{- if not .Values.hdfs.namenode.persistence.enabled }}
      - name: {{ template "common.fullname" . }}-hdfs-nn
        emptyDir: {}
    {{- end }}
{{- if .Values.hdfs.namenode.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "common.fullname" . }}-hdfs-nn
    spec:
      accessModes: {{ .Values.hdfs.namenode.persistence.accessModes }}
      resources:
        requests:
          storage: {{ .Values.hdfs.namenode.persistence.size }}
    {{- if .Values.hdfs.namenode.persistence.storageClass }}
      {{- if (eq "-" .Values.hdfs.namenode.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.hdfs.namenode.persistence.storageClass | quote }}
      {{- end }}
    {{- end }}
{{- end }}
{{- end -}}

{{- $commonStatefulSet := fromYaml (include "common.statefulset" .) -}}
{{- $stackstateHbaseHdfsNamenodeStatefulSet := fromYaml (include "hbase.hdfs.namenode.statefulset" .) -}}
{{- toYaml (merge $stackstateHbaseHdfsNamenodeStatefulSet $commonStatefulSet) -}}
