{{- define "hbase.hbase.regionserver.container.init" -}}
name: regionserver-init
command:
- sh
- -c
- |
  /entrypoint -c {{ include "hbase.zookeeper.endpoint" . }}:2181,{{ template "common.fullname.short" . }}-hbase-master:16000 -t 300
image: "docker.io/dokkupaas/wait:latest"
imagePullPolicy: Always
{{- end -}}

{{- define "hbase.hbase.regionserver.container.main" -}}
name: regionserver
image: "{{ .Values.hbase.regionserver.image.repository }}:{{ default .Values.stackgraph.image.tag .Values.hbase.regionserver.image.tag }}"
imagePullPolicy: {{ default .Values.stackgraph.image.pullPolicy .Values.hbase.regionserver.image.pullPolicy }}
env:
{{- include "all.commonEnv" . }}
{{- include "hbase.regionserver.commonEnv" . }}
{{- include "hbase.hdfs.commonEnv" . }}
{{- include "hbase.hbase.commonEnv" . }}
- name: POD_NAME
  valueFrom:
    fieldRef:
      fieldPath: metadata.name
- name: POD_NAMESPACE
  valueFrom:
    fieldRef:
      fieldPath: metadata.namespace
- name: HBASE_CONF_hbase_regionserver_hostname
  value: $(POD_NAME).{{ template "common.fullname.short" . }}-hbase-rs.$(POD_NAMESPACE).svc.cluster.local
ports:
- containerPort: 16020
  name: rs
- containerPort: 16030
  name: rsinfo
{{- if .Values.all.metrics.enabled }}
- containerPort: 9404
  name: metrics
{{- end }}
livenessProbe:
  httpGet:
    path: /
    port: rsinfo
readinessProbe:
  httpGet:
    path: /
    port: rsinfo
{{- with .Values.hbase.regionserver.resources }}
resources:
  {{- toYaml . | nindent 2 }}
{{- end }}
securityContext:
  runAsNonRoot: true
  runAsGroup: {{ .Values.securityContext.runAsGroup }}
  runAsUser: {{ .Values.securityContext.runAsUser }}
{{- end -}}

{{- define "hbase.hbase.regionserver.statefulset" -}}
{{- $commonContainer := fromYaml (include "common.container" .) -}}
{{- $overrideContainer := fromYaml (include "hbase.hbase.regionserver.container.main" .) -}}
{{- $stackstateHbaseRegionServerContainer := (merge $overrideContainer $commonContainer) -}}
{{- $overrideContainer := fromYaml (include "hbase.hbase.regionserver.container.init" .) -}}
{{- $stackstateHbaseRegionServerInitContainer := (merge $overrideContainer $commonContainer) -}}
metadata:
  labels:
    app.kubernetes.io/component: hbase-rs
  name: {{ template "common.fullname.short" . }}-hbase-rs
spec:
  podManagementPolicy: Parallel
  replicas: {{ .Values.hbase.regionserver.replicaCount }}
  serviceName: {{ template "common.fullname.short" . }}-hbase-rs
  selector:
    matchLabels:
      app.kubernetes.io/component: hbase-rs
  template:
    metadata:
      labels:
        app.kubernetes.io/component: hbase-rs
    spec:
    {{- if .Values.all.image.pullSecretName }}
      imagePullSecrets:
      - name: '{{ .Values.all.image.pullSecretName }}'
    {{- else if .Values.all.image.pullSecretDockerConfigJson }}
      imagePullSecrets:
      - name: '{{ template "common.fullname.short" . }}-pull-secret'
    {{- end }}
      initContainers:
      - {{ toYaml $stackstateHbaseRegionServerInitContainer | nindent 8 }}
      containers:
      - {{ toYaml $stackstateHbaseRegionServerContainer | nindent 8 }}
    {{- if or .Values.all.nodeSelector .Values.hbase.regionserver.nodeSelector }}
      nodeSelector:
      {{- with .Values.all.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hbase.regionserver.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.all.affinity .Values.hbase.regionserver.affinity }}
      affinity:
      {{- with .Values.all.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hbase.regionserver.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.all.tolerations .Values.hbase.regionserver.tolerations }}
      tolerations:
      {{- with .Values.all.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hbase.regionserver.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
{{- end -}}

{{- $commonStatefulSet := fromYaml (include "common.statefulset" .) -}}
{{- $stackstateHbaseRegionServerStatefulSet := fromYaml (include "hbase.hbase.regionserver.statefulset" .) -}}
{{- toYaml (merge $stackstateHbaseRegionServerStatefulSet $commonStatefulSet) -}}
