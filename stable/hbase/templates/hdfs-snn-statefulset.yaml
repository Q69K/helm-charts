{{- define "hbase.hdfs.secondarynamenode.container.init" -}}
name: snamenode-init
image: "busybox:latest"
command:
- sh
- -c
- chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }} /hadoop-data
securityContext:
  allowPrivilegeEscalation: true
  privileged: true
volumeMounts:
- name: {{ template "common.fullname" . }}-hdfs-snn
  mountPath: /hadoop-data
{{- end -}}

{{- define "hbase.hdfs.secondarynamenode.container.main" -}}
name: namenode
image: "{{ .Values.hdfs.image.repository }}:{{ .Values.hdfs.image.tag }}"
imagePullPolicy: {{ .Values.hdfs.image.pullPolicy }}
args:
- /entrypoint.sh
- /run.sh
- secondarynamenode
env:
{{- include "all.commonEnv" . }}
{{- include "hdfs.secondarynamenode.commonEnv" . }}
{{- include "hbase.hdfs.commonEnv" . }}
ports:
- containerPort: 50090
  name: snn
livenessProbe:
  tcpSocket:
    port: snn
readinessProbe:
  tcpSocket:
    port: snn
{{- with .Values.hdfs.secondarynamenode.resources }}
resources:
  {{- toYaml . | nindent 2 }}
{{- end }}
securityContext:
  runAsNonRoot: true
  runAsGroup: {{ .Values.securityContext.runAsGroup }}
  runAsUser: {{ .Values.securityContext.runAsUser }}
volumeMounts:
- name: {{ template "common.fullname" . }}-hdfs-snn
  mountPath: /hadoop-data
{{- end -}}

{{- define "hbase.hdfs.secondarynamenode.statefulset" -}}
{{- $commonContainer := fromYaml (include "common.container" .) -}}
{{- $overrideContainer := fromYaml (include "hbase.hdfs.secondarynamenode.container.main" .) -}}
{{- $stackstateHbaseHdfsSecondaryNamenodeContainer := (merge $overrideContainer $commonContainer) }}
{{- $overrideContainer := fromYaml (include "hbase.hdfs.secondarynamenode.container.init" .) -}}
{{- $stackstateHbaseHdfsSecondaryNamenodeInitContainer := (merge $overrideContainer $commonContainer) }}
metadata:
  labels:
    app.kubernetes.io/component: hdfs-snn
  name: {{ template "common.fullname" . }}-hdfs-snn
spec:
  serviceName: {{ template "common.fullname" . }}-hdfs-snn
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: hdfs-snn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: hdfs-snn
    spec:
      containers:
      -
        {{ toYaml $stackstateHbaseHdfsSecondaryNamenodeContainer | nindent 8 }}
      initContainers:
      -
        {{ toYaml $stackstateHbaseHdfsSecondaryNamenodeInitContainer | nindent 8 }}
    {{- if or .Values.all.nodeSelector .Values.hdfs.secondarynamenode.nodeSelector }}
      nodeSelector:
      {{- with .Values.all.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hdfs.secondarynamenode.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.all.affinity .Values.hdfs.secondarynamenode.affinity }}
      affinity:
      {{- with .Values.all.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hdfs.secondarynamenode.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.all.tolerations .Values.hdfs.secondarynamenode.tolerations }}
      tolerations:
      {{- with .Values.all.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hdfs.secondarynamenode.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
      volumes:
    {{- if not .Values.hdfs.secondarynamenode.persistence.enabled }}
      - name: {{ template "common.fullname" . }}-hdfs-snn
        emptyDir: {}
    {{- end }}
{{- if .Values.hdfs.secondarynamenode.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "common.fullname" . }}-hdfs-snn
    spec:
      accessModes: {{ .Values.hdfs.secondarynamenode.persistence.accessModes }}
      resources:
        requests:
          storage: {{ .Values.hdfs.secondarynamenode.persistence.size }}
      storageClassName: {{ .Values.hdfs.secondarynamenode.persistence.storageClass }}
{{- end }}
{{- end -}}

{{- if .Values.hdfs.secondarynamenode.enabled -}}
{{- $commonStatefulSet := fromYaml (include "common.statefulset" .) -}}
{{- $stackstateHbaseHdfsSecondaryNamenodeStatefulSet := fromYaml (include "hbase.hdfs.secondarynamenode.statefulset" .) -}}
{{- toYaml (merge $stackstateHbaseHdfsSecondaryNamenodeStatefulSet $commonStatefulSet) -}}
{{- end -}}
