{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ include "common.fullname.short" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
  annotations:
  {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
    {{- include "stackstate.ingress.rules" . | nindent 4 }}
{{- else if .Values.caspr.enabled -}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ include "common.fullname.short" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: ingress-nginx-external
    nginx.ingress.kubernetes.io/ingress.class: ingress-nginx-external
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
    - hosts:
        - {{ .Values.caspr.applicationInstance.host | quote }}
      secretName: {{ .Values.caspr.cluster.clustergroup.data.kubernetes.ingresssecretname }}
  rules:
  - host: {{ .Values.caspr.applicationInstance.host | quote }}
    http:
      paths:
        - backend:
            serviceName: {{ include "common.fullname.short" $ }}-router
            servicePort: 8080
          path: /
{{- end }}
