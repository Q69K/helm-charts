{{- define "stackstate.sync.statefulset.container.init" -}}
name: server-init
command:
- sh
- -c
- |
  /entrypoint -c {{ include "stackstate.kafka.endpoint" . }},{{ include "stackstate.zookeeper.endpoint" . }},{{ .Release.Name }}-hbase-hdfs-nn-headful:9000,{{ template "common.fullname.short" . }}-initializer:1618 -t 300
image: "{{include "stackstate.wait.image.registry" .}}/{{ .Values.stackstate.components.wait.image.repository }}:{{ .Values.stackstate.components.wait.image.tag }}"
imagePullPolicy: Always
{{- end -}}

{{- define "stackstate.sync.statefulset.container.main" -}}
args:
- -startRole
- sync
env:
{{- include "stackstate.common.envvars" . }}
{{- include "stackstate.sync.envvars" . }}
- name: API_KEY
  valueFrom:
    secretKeyRef:
      name: {{ template "common.fullname.short" . }}-receiver
      key: sts-receiver-api-key
- name: ELASTICSEARCH_URI
  value: "http://{{ include "stackstate.es.endpoint" . }}"
- name: KAFKA_BROKERS
  value: {{ include "stackstate.kafka.endpoint" . | quote }}
- name: LICENSE_KEY
  valueFrom:
    secretKeyRef:
      name: {{ template "common.fullname.short" . }}-license
      key: sts-license-key
- name: RECEIVER_BASE_URL
  value: {{ printf "%s/%s" .Values.stackstate.receiver.baseUrl "receiver" | quote }}
- name: ZOOKEEPER_QUORUM
  value: {{ include "stackstate.zookeeper.endpoint" . | quote }}
- name: CONFIG_FORCE_stackstate_stackPacks_localStackPacksUri
  value: "hdfs://{{ .Release.Name }}-hbase-hdfs-nn-headful:9000/stackpacks"
{{- if .Values.stackstate.admin.authentication.enabled }}
- name: CONFIG_FORCE_stackstate_adminApi_authentication_enabled
  value: "true"
{{- end }}
image: "{{ include "stackstate.image.registry" . }}/{{ .Values.stackstate.components.sync.image.repository }}{{ .Values.stackstate.components.all.image.repositorySuffix }}:{{ default .Values.stackstate.components.all.image.tag .Values.stackstate.components.sync.image.tag }}"
imagePullPolicy: {{ default .Values.stackstate.components.all.image.pullPolicy .Values.stackstate.components.sync.image.pullPolicy | quote }}
name: sync
ports:
- containerPort: 1618
  name: health
- containerPort: 7080
  name: instance
{{- if .Values.stackstate.components.all.metrics.enabled }}
- containerPort: 9404
  name: metrics
{{- end }}
livenessProbe:
  httpGet:
    path: /liveness
    port: health
  initialDelaySeconds: 60
  timeoutSeconds: 5
readinessProbe:
  httpGet:
    path: /readiness
    port: health
  initialDelaySeconds: 60
  timeoutSeconds: 5
{{- with .Values.stackstate.components.sync.resources }}
resources:
  {{- toYaml . | nindent 2 }}
{{- end }}
securityContext:
  runAsGroup: 65534
  runAsNonRoot: true
  runAsUser: 65534
volumeMounts:
- name: config-volume
  mountPath: /opt/docker/etc/application_stackstate.conf
  subPath: application_stackstate.conf
{{- end -}}

{{- define "stackstate.sync.statefulset" -}}
{{- $commonContainer := fromYaml (include "common.container" .) -}}
{{- $overrideContainer := fromYaml (include "stackstate.sync.statefulset.container.main" .) -}}
{{- $stsStackstateSyncMainContainer := (merge $overrideContainer $commonContainer) -}}
{{- $overrideContainer := fromYaml (include "stackstate.sync.statefulset.container.init" .) -}}
{{- $stsStackstateServerInitContainer := (merge $overrideContainer $commonContainer) -}}
metadata:
  name: {{ template "common.fullname.short" . }}-sync
  labels:
    app.kubernetes.io/component: sync
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: sync
  template:
    metadata:
      annotations:
        {{- include "stackstate.common.secret.checksum" . | nindent 8 }}
        {{- include "stackstate.license.secret.checksum" . | nindent 8 }}
        {{- include "stackstate.sync.secret.checksum" . | nindent 8 }}
        {{- include "stackstate.sync.configmap.checksum" . | nindent 8 }}
      labels:
        app.kubernetes.io/component: sync
    spec:
    {{- if .Values.stackstate.components.all.image.pullSecretName }}
      imagePullSecrets:
      - name: '{{ .Values.stackstate.components.all.image.pullSecretName }}'
    {{- else if .Values.stackstate.components.all.image.pullSecretDockerConfigJson }}
      imagePullSecrets:
      - name: '{{ template "common.fullname.short" . }}-pull-secret'
    {{- end }}
      initContainers:
      - {{ toYaml $stsStackstateServerInitContainer | nindent 8 }}
      containers:
      - {{ toYaml $stsStackstateSyncMainContainer | nindent 8 }}
    {{- if or .Values.stackstate.components.all.nodeSelector .Values.stackstate.components.sync.nodeSelector }}
      nodeSelector:
      {{- with .Values.stackstate.components.all.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.sync.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.affinity .Values.stackstate.components.sync.affinity }}
      affinity:
      {{- with .Values.stackstate.components.all.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.sync.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.tolerations .Values.stackstate.components.sync.tolerations }}
      tolerations:
      {{- with .Values.stackstate.components.all.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.sync.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "common.fullname.short" . }}-sync
{{- end -}}

{{- if .Values.stackstate.experimental.server.split }}
{{- $commonStatefulset := fromYaml (include "common.statefulset" .) -}}
{{- $syncStatefulset := fromYaml (include "stackstate.sync.statefulset" .) -}}
{{- toYaml (merge $syncStatefulset $commonStatefulset) -}}
{{- end}}
