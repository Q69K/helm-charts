################################################################
# THIS FILE WAS GENERATED AUTOMATICALLY! DO NOT EDIT MANUALLY! #
################################################################
image: quay.io/helmpack/chart-testing:v3.0.0-beta.2
integration_test_stackstate:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/stackstate/**/*
      exists:
        - stable/stackstate/itest/*.go
      if: $CI_COMMIT_TAG
  script:
    - go test ./stable/stackstate/itest/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/stackstate
push_aws-amicleaner_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/aws-amicleaner/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/aws-amicleaner
push_aws-amicleaner_to_public:
  needs:
    - push_aws-amicleaner_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/aws-amicleaner/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/aws-amicleaner
push_aws-nuke_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/aws-nuke/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/aws-nuke
push_aws-nuke_to_public:
  needs:
    - push_aws-nuke_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/aws-nuke/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/aws-nuke
push_chartmuseum_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/chartmuseum/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/chartmuseum
push_chartmuseum_to_public:
  needs:
    - push_chartmuseum_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/chartmuseum/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/chartmuseum
push_cluster-agent_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/cluster-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/cluster-agent
push_cluster-agent_to_public:
  needs:
    - push_cluster-agent_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/cluster-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/cluster-agent
push_common_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/common/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/common
push_common_to_public:
  needs:
    - push_common_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/common/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/common
push_elasticsearch_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/elasticsearch
push_elasticsearch_to_public:
  needs:
    - push_elasticsearch_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/elasticsearch
push_gitlab-runner_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/gitlab-runner/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/gitlab-runner
push_gitlab-runner_to_public:
  needs:
    - push_gitlab-runner_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/gitlab-runner/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/gitlab-runner
push_gitlab-steward_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/gitlab-steward/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/gitlab-steward
push_gitlab-steward_to_public:
  needs:
    - push_gitlab-steward_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/gitlab-steward/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/gitlab-steward
push_hbase_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/hbase/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/hbase
push_hbase_to_public:
  needs:
    - push_hbase_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/hbase/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/hbase
push_iceman_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/iceman/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/iceman
push_iceman_to_public:
  needs:
    - push_iceman_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/iceman/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/iceman
push_kafka_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/kafka/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/kafka
push_kafka_to_public:
  needs:
    - push_kafka_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/kafka/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/kafka
push_sandbox-operator_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/sandbox-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/sandbox-operator
push_sandbox-operator_to_public:
  needs:
    - push_sandbox-operator_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/sandbox-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/sandbox-operator
push_stackstate-standalone_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate-standalone
push_stackstate-standalone_to_public:
  needs:
    - push_stackstate-standalone_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate-standalone
push_stackstate_release_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)-pre\.(\d+)\.rc\.(\d+)$/
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)-rc\.(\d+)$/
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)$/
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)-pre\.(\d+)$/
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate
push_stackstate_release_to_public:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)$/
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate
push_stackstate_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - apk add --no-cache jq bash
    - .gitlab/bump_sts_chart_master_version.sh stackstate-internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/stackstate/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate
push_stackstate_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - apk add --no-cache jq bash
    - .gitlab/bump_sts_chart_master_version.sh stackstate
  needs:
    - push_stackstate_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/stackstate/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate
push_test_charts:
  before_script:
    - .gitlab/push_before_script.sh
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: always
  script:
    - sh test/sync-repo.sh
  stage: build
  variables:
    AWS_BUCKET: s3://helm-test.stackstate.io
    REPO_URL: https://helm-test.stackstate.io/
push_trafficmirror_to_internal:
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/trafficmirror
push_trafficmirror_to_public:
  needs:
    - push_trafficmirror_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/trafficmirror
stages:
  - validate
  - test
  - update
  - build
  - push-charts-to-internal
  - push-charts-to-public
test_aws-amicleaner:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/aws-amicleaner/**/*
      exists:
        - stable/aws-amicleaner/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/aws-amicleaner/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/aws-amicleaner
test_aws-nuke:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/aws-nuke/**/*
      exists:
        - stable/aws-nuke/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/aws-nuke/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/aws-nuke
test_chartmuseum:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/chartmuseum/**/*
      exists:
        - stable/chartmuseum/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/chartmuseum/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/chartmuseum
test_cluster-agent:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/cluster-agent/**/*
      exists:
        - stable/cluster-agent/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/cluster-agent/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/cluster-agent
test_common:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/common/**/*
      exists:
        - stable/common/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/common/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/common
test_elasticsearch:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/elasticsearch/**/*
      exists:
        - stable/elasticsearch/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/elasticsearch/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/elasticsearch
test_gitlab-runner:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/gitlab-runner/**/*
      exists:
        - stable/gitlab-runner/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/gitlab-runner/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/gitlab-runner
test_gitlab-steward:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/gitlab-steward/**/*
      exists:
        - stable/gitlab-steward/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/gitlab-steward/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/gitlab-steward
test_hbase:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/hbase/**/*
      exists:
        - stable/hbase/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/hbase/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/hbase
test_iceman:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/iceman/**/*
      exists:
        - stable/iceman/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/iceman/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/iceman
test_kafka:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/kafka/**/*
      exists:
        - stable/kafka/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/kafka/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/kafka
test_sandbox-operator:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/sandbox-operator/**/*
      exists:
        - stable/sandbox-operator/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/sandbox-operator/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/sandbox-operator
test_stackstate:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/stackstate/**/*
      exists:
        - stable/stackstate/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/stackstate
test_stackstate-standalone:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/stackstate-standalone/**/*
      exists:
        - stable/stackstate-standalone/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate-standalone/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/stackstate-standalone
test_trafficmirror:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add minio https://helm.min.io/
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
    - helm dependencies update ${CHART}
  image: stackstate/stackstate-ci-images:stackstate-helm-test-e8e8e526
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - changes:
        - stable/trafficmirror/**/*
      exists:
        - stable/trafficmirror/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/trafficmirror/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
    CHART: stable/trafficmirror
update_stackgraph_version:
  before_script:
    - apt update && apt install -y curl git gawk
    - YQ_VERSION="3.3.2"
    - curl -L https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_386 --output /tmp/yq_linux_386
    - cp /tmp/yq_linux_386 /usr/bin/yq
    - chmod +x /usr/bin/yq
    - rm -f /tmp/yq_linux_386
  image: ubuntu:18.04
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: always
  script:
    - .gitlab/update_sg_version.sh stable/stackstate "hbase."
    - .gitlab/update_sg_version.sh stable/hbase ""
    - .gitlab/commit_changes_and_push.sh
  stage: update
  variables:
    GIT_AUTHOR_EMAIL: sts-admin@stackstate.com
    GIT_AUTHOR_NAME: stackstate-system-user
    GIT_COMMITTER_EMAIL: sts-admin@stackstate.com
    GIT_COMMITTER_NAME: stackstate-system-user
validate_charts:
  before_script:
    - .gitlab/validate_before_script.sh
  environment: stseuw1-sandbox-main-eks-sandbox/${CI_COMMIT_REF_NAME}
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      when: never
    - when: always
  script:
    - ct list-changed --config test/ct.yaml
    - ct lint --debug --validate-maintainers=false --excluded-charts stackstate --excluded-charts gitlab-runner --config test/ct.yaml
    - .gitlab/validate_kubeval.sh
  stage: validate
validate_stackstate_chart:
  before_script:
    - .gitlab/validate_before_script.sh
  environment: stseuw1-sandbox-main-eks-sandbox/${CI_COMMIT_REF_NAME}
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      when: never
    - when: always
  script:
    - ct list-changed --config test/ct.yaml
    - ct lint --debug --validate-maintainers=false --charts stable/stackstate --config test/ct.yaml
    - .gitlab/validate_kubeval.sh
  stage: validate
variables:
  HELM_VERSION: v3.1.2
  KUBEVAL_SCHEMA_LOCATION: https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
