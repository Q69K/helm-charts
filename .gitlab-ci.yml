################################################################
# THIS FILE WAS GENERATED AUTOMATICALLY! DO NOT EDIT MANUALLY! #
################################################################
image: quay.io/helmpack/chart-testing:v3.0.0-beta.2
push_aws-amicleaner_to_internal:
  needs:
    - test_aws-amicleaner
  only:
    changes:
      - stable/aws-amicleaner/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/aws-amicleaner
push_aws-amicleaner_to_public:
  needs:
    - push_aws-amicleaner_to_internal
  only:
    changes:
      - stable/aws-amicleaner/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/aws-amicleaner
  when: manual
push_aws-nuke_to_internal:
  needs:
    - test_aws-nuke
  only:
    changes:
      - stable/aws-nuke/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/aws-nuke
push_aws-nuke_to_public:
  needs:
    - push_aws-nuke_to_internal
  only:
    changes:
      - stable/aws-nuke/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/aws-nuke
  when: manual
push_cluster-agent_to_internal:
  needs:
    - test_cluster-agent
  only:
    changes:
      - stable/cluster-agent/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/cluster-agent
push_cluster-agent_to_public:
  needs:
    - push_cluster-agent_to_internal
  only:
    changes:
      - stable/cluster-agent/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/cluster-agent
  when: manual
push_common_to_internal:
  needs:
    - test_common
  only:
    changes:
      - stable/common/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/common
push_common_to_public:
  needs:
    - push_common_to_internal
  only:
    changes:
      - stable/common/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/common
  when: manual
push_elasticsearch_to_internal:
  needs:
    - test_elasticsearch
  only:
    changes:
      - stable/elasticsearch/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/elasticsearch
push_elasticsearch_to_public:
  needs:
    - push_elasticsearch_to_internal
  only:
    changes:
      - stable/elasticsearch/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/elasticsearch
  when: manual
push_gitlab-runner_to_internal:
  needs:
    - test_gitlab-runner
  only:
    changes:
      - stable/gitlab-runner/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/gitlab-runner
push_gitlab-runner_to_public:
  needs:
    - push_gitlab-runner_to_internal
  only:
    changes:
      - stable/gitlab-runner/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/gitlab-runner
  when: manual
push_gitlab-steward_to_internal:
  needs:
    - test_gitlab-steward
  only:
    changes:
      - stable/gitlab-steward/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/gitlab-steward
push_gitlab-steward_to_public:
  needs:
    - push_gitlab-steward_to_internal
  only:
    changes:
      - stable/gitlab-steward/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/gitlab-steward
  when: manual
push_hbase_to_internal:
  needs:
    - test_hbase
  only:
    changes:
      - stable/hbase/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/hbase
push_hbase_to_public:
  needs:
    - push_hbase_to_internal
  only:
    changes:
      - stable/hbase/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/hbase
  when: manual
push_iceman_to_internal:
  needs:
    - test_iceman
  only:
    changes:
      - stable/iceman/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/iceman
push_iceman_to_public:
  needs:
    - push_iceman_to_internal
  only:
    changes:
      - stable/iceman/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/iceman
  when: manual
push_stackstate-standalone_to_internal:
  needs:
    - test_stackstate-standalone
  only:
    changes:
      - stable/stackstate-standalone/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate-standalone
push_stackstate-standalone_to_public:
  needs:
    - push_stackstate-standalone_to_internal
  only:
    changes:
      - stable/stackstate-standalone/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate-standalone
  when: manual
push_stackstate_to_internal:
  needs:
    - test_stackstate
  only:
    changes:
      - stable/stackstate/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate
push_stackstate_to_public:
  needs:
    - push_stackstate_to_internal
  only:
    changes:
      - stable/stackstate/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate
  when: manual
push_test_charts:
  before_script:
    - .gitlab/push_before_script.sh
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add stable https://kubernetes-charts.storage.googleapis.com
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo update
  except:
    refs:
      - master
  needs:
    - validate_charts
  only:
    refs:
      - branches
  script:
    - sh test/sync-repo.sh
  stage: build
  variables:
    AWS_BUCKET: s3://helm-test.stackstate.io
    REPO_URL: https://helm-test.stackstate.io/
push_trafficmirror_to_internal:
  needs:
    - test_trafficmirror
  only:
    changes:
      - stable/trafficmirror/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/trafficmirror
push_trafficmirror_to_public:
  needs:
    - push_trafficmirror_to_internal
  only:
    changes:
      - stable/trafficmirror/**/*
    refs:
      - master
  script:
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - helm dependencies update ${CHART}
    - helm push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/trafficmirror
  when: manual
stages:
  - validate
  - test
  - build
  - push-charts-to-internal
  - push-charts-to-public
test_aws-amicleaner:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/aws-amicleaner/**/*
    - exists:
        - stable/aws-amicleaner/test/*.go
  script:
    - go test ./stable/aws-amicleaner/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_aws-nuke:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/aws-nuke/**/*
    - exists:
        - stable/aws-nuke/test/*.go
  script:
    - go test ./stable/aws-nuke/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_cluster-agent:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/cluster-agent/**/*
    - exists:
        - stable/cluster-agent/test/*.go
  script:
    - go test ./stable/cluster-agent/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_common:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/common/**/*
    - exists:
        - stable/common/test/*.go
  script:
    - go test ./stable/common/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_elasticsearch:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/elasticsearch/**/*
    - exists:
        - stable/elasticsearch/test/*.go
  script:
    - go test ./stable/elasticsearch/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_gitlab-runner:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/gitlab-runner/**/*
    - exists:
        - stable/gitlab-runner/test/*.go
  script:
    - go test ./stable/gitlab-runner/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_gitlab-steward:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/gitlab-steward/**/*
    - exists:
        - stable/gitlab-steward/test/*.go
  script:
    - go test ./stable/gitlab-steward/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_hbase:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/hbase/**/*
    - exists:
        - stable/hbase/test/*.go
  script:
    - go test ./stable/hbase/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_iceman:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/iceman/**/*
    - exists:
        - stable/iceman/test/*.go
  script:
    - go test ./stable/iceman/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_stackstate:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/stackstate/**/*
    - exists:
        - stable/stackstate/test/*.go
  script:
    - go test ./stable/stackstate/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_stackstate-standalone:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/stackstate-standalone/**/*
    - exists:
        - stable/stackstate-standalone/test/*.go
  script:
    - go test ./stable/stackstate-standalone/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_trafficmirror:
  image: golang:1.14-alpine
  rules:
    - changes:
        - stable/trafficmirror/**/*
    - exists:
        - stable/trafficmirror/test/*.go
  script:
    - go test ./stable/trafficmirror/...
  stage: test
  variables:
    CGO_ENABLED: 0
validate_charts:
  before_script:
    - .gitlab/validate_before_script.sh
  environment: stseuw1-sandbox-main-eks-sandbox/${CI_COMMIT_REF_NAME}
  except:
    refs:
      - master
  only:
    refs:
      - branches
  script:
    - ct list-changed --config test/ct.yaml
    - ct lint --debug --validate-maintainers=false --config test/ct.yaml
    - .gitlab/validate_kubeval.sh
  stage: validate
variables:
  HELM_VERSION: v3.1.2
  KUBEVAL_SCHEMA_LOCATION: https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master
